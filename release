#!/bin/sh

# ***** BEGIN LICENSE BLOCK *****
# Version: MPL 1.1/GPL 2.0/LGPL 2.1
#
# The contents of this file are subject to the Mozilla Public License Version
# 1.1 (the "License"); you may not use this file except in compliance with
# the License. You may obtain a copy of the License at
# http://www.mozilla.org/MPL/
# 
# Software distributed under the License is distributed on an "AS IS" basis,
# WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
# for the specific language governing rights and limitations under the
# License.
#
# The Original Code is Status-4-Evar.
#
# The Initial Developer of the Original Code is 
# Matthew Turnbull <sparky@bluefang-logic.com>.
#
# Portions created by the Initial Developer are Copyright (C) 2011
# the Initial Developer. All Rights Reserved.
#
# Contributor(s):
#
# Alternatively, the contents of this file may be used under the terms of
# either the GNU General Public License Version 2 or later (the "GPL"), or
# the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
# in which case the provisions of the GPL or the LGPL are applicable instead
# of those above. If you wish to allow use of your version of this file only
# under the terms of either the GPL or the LGPL, and not to allow others to
# use your version of this file under the terms of the MPL, indicate your
# decision by deleting the provisions above and replace them with the notice
# and other provisions required by the GPL or the LGPL. If you do not delete
# the provisions above, a recipient may use your version of this file under
# the terms of any one of the MPL, the GPL or the LGPL.
#
# ***** END LICENSE BLOCK *****

VALID=""
HELP=""
VERSION=`date +%Y.%m.%d.%H`
VERSION_BUMP=""

case "$1" in
	-a|--alpha)
		VERSION="${VERSION}a"
		VERSION_BUMP="1"
		VALID="1"
		;;
	-b|--beta)
		VERSION="${VERSION}b"
		VALID="1"
		;;
	-p|--pre)
		VERSION="${VERSION}pre"
		VERSION_BUMP="1"
		VALID="1"
		;;
	-r|--release)
		VALID="1"
		;;
	-h|--help)
		HELP="1"
		VALID="1"
		;;
esac

EXIT=0
if [ -z "${VALID}" ]; then
	echo "Invalid action: '${1}'"
	EXIT=1
fi
if [ -z "${VALID}" ] || [ -n "${HELP}" ]; then
	echo "Options:"
	echo " -a --alpha   Alpha version bump"
	echo " -b --beta    Beta release"
	echo " -p --pre     Pre version bump"
	echo " -r --release Final release"
	echo " -h --help    Print this help message"
	echo ""
	echo "Version bumps will just modify the install.manifest and commit the changes. Releases will also modify the ChangeLog and tag the commit."
	exit $EXIT
fi

# Check for uncommitted changes
CHANGES=`git diff HEAD --exit-code --name-only`
if [ $? -ne 0 ]; then
	echo "There are uncommitted changes:"
	echo "${CHANGES}"
	exit 1
fi

# Up the version
sed -i "/^version=/s/=.*$/=${VERSION}/g" install.manifest
git add install.manifest

if [ -z "${VERSION_BUMP}" ]; then
	# Update the ChangeLog
	sed -i "/^Version /s/ next$/ next\n\nVersion ${VERSION}/g" ChangeLog
	git add ChangeLog

	# Commit and tag the release
	git commit -m "Release ${VERSION}"
	git tag "${VERSION}"
else
	# Commit
	git commit -m "Version bump ${VERSION}"
fi

